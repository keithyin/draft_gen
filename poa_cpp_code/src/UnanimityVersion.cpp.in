// Author: Armin TÃ¶pfer

#include <algorithm>
#include <string>
#include <tuple>

#include <pacbio/UnanimityVersion.h>

namespace PacBio {
namespace {
static constexpr const char UnyVersion[]   = "@UNANIMITY_VERSION@";
static constexpr const char UnyChangelog[] = "${UNANIMITY_CHANGELOG}";
static constexpr const int UnyVersionMajor = @UNANIMITY_VERSION_MAJOR@;
static constexpr const int UnyVersionMinor = @UNANIMITY_VERSION_MINOR@;
static constexpr const int UnyVersionPatch = @UNANIMITY_VERSION_PATCH@;
}

std::string UnanimityChangelog()
{
    std::string changelog(UnyChangelog);
    std::replace(changelog.begin(), changelog.end(), ';', '\n');
    return changelog;
}

std::string UnanimityVersion()
{ return UnyVersion; }

std::tuple<int, int, int> UnanimityVersionTriple()
{ return std::make_tuple(UnyVersionMajor, UnyVersionMinor, UnyVersionPatch); }

}  // ::PacBio
